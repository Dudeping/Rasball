public static void TarCreateFromStream()
{

// 创建输出流。不必是磁盘，可以是内存流等。
string tarOutFn = @"d:\test.tar";
Stream outStream = File.Create(tarOutFn);
TarOutputStream tarOutputStream = new TarOutputStream(outStream);

CreateTarArchive(tarOutputStream, @"D:\文件夹");

// 关闭归档文件也关闭底层流。
tarOutputStream.Close();
}

private static void CreateTarArchive(TarOutputStream tarOutputStream, string sourceDirectory)
{
// 可选地，为目录本身写一个条目。
// TarEntry tarEntry = TarEntry.CreateEntryFromFile(sourceDirectory);
// tarOutputStream.PutNextEntry(tarEntry);
// 将每个文件写入tar。
string[] filenames = Directory.GetFiles(sourceDirectory);

foreach (string filename in filenames)
{
using (Stream inputStream = File.OpenRead(filename))
{
int idxStart = filename.LastIndexOf('\\') + 1;
string tarName = filename.Substring(idxStart, filename.Length - idxStart);
long fileSize = inputStream.Length;
TarEntry entry = TarEntry.CreateTarEntry(tarName);

// 必须设置大小，否则当输出超过时，TAROutPutsFipe将失败。
entry.Size = fileSize;

// 在写入数据之前，将条目添加到TAR流中。
tarOutputStream.PutNextEntry(entry);

// 这是从TracSovi.Read EngyCype复制的
byte[] localBuffer = new byte[32 * 1024];
while (true)
{
int numRead = inputStream.Read(localBuffer, 0, localBuffer.Length);
if (numRead <= 0)
{
break;
}
tarOutputStream.Write(localBuffer, 0, numRead);
}
}
tarOutputStream.CloseEntry();
}
// 递归。如果不需要就删除。
//string[] directories = Directory.GetDirectories(sourceDirectory);
//foreach (string directory in directories)
//{
// CreateTarArchive(tarOutputStream, directory);
//}
}







PowerServer 重构

10%

1. 初步完成 PowerServer 中 DbHandler 部分的重构；
2. 学习 PowerServer 和 APB 的交互和整体运作流程；
3. 学习和整理 PowerServer 现有测试案例和单元测试。

本周继续深入了解了 PowerServer 项目，整体架构流程上的设计比较合理，但是各个部分的实现上有较大的优化空间；
所以准就尽快从影响面比较小的 Handler 部分入手，然后再进一步对请求参数解析和响应数据构建进行优化调整；
其间，为了能更加清楚把握 PowerServer 的定位，我们请 APB 组帮忙培训了 PowerServer 和 APB 的交互和整体运作流程；
因为进一步的重构需要涉及到具体的交互协议，但是当前的协议没有最终确认，以及之后会改用 PB 组现在制定的协议，加上听取现有开发人员的意见；
我们决定暂缓进一步的重构工作，开始着手进行 PowerServer License 服务的开发，但是该想法被驳回；

其实提升一下高度去思考这个问题，PB 中 SQL 语法是有限的，并且基于现有的实现，交互协议及模式大致是可以确定的，甚至要替换为 PB 现在制定的协议，
根据现有 PB 协议的风格，也是可以评估出大致的改动方向，所以现在继续进行重构是没有问题，之后协议的修改也不会带来大的改动；
有了上述工作，再加上对 PowerServer 可能发展趋势的预估，我们是可以评估出现有的 Runtime 是否能够满足 PowerServer 的使用，并作出相应调整；

本周的工作中，因为自己比较急躁以及表达的原因，在跨部门沟通上引发了一些矛盾，今后做相关工作时需要注意方式，尽量考虑周全；
但是也发现，有的同事，第一想的不是怎么把产品做好，而是关心项目归谁负责。

同时也发现，公司对待没有按照预期成长起来的同事，不是一味在其身上找原因，而是反过来思考是否是工作安排上的问题，并作出积极调整。







* 小组定位

* 高效率团队、标杆

* 成员要求: 主动思考、有创造力

* 公司理念: 人才成长推动公司发展

* 论述为什么打造、怎么打造高效率团队
    - 提纲招聘要求
    - 快速淘汰不符合要求

* 正确对待天花板，长远规划
